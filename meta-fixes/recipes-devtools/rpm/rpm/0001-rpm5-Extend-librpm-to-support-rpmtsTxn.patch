From 23a5c0da398f797aca15f42b6aa2fcd8c7900621 Mon Sep 17 00:00:00 2001
From: Janos Kovacs <janos.kovacs@intel.com>
Date: Mon, 28 Sep 2015 11:55:03 +0300
Subject: [PATCH 1/3] rpm5: Extend librpm to support rpmtsTxn

RPM5 provides support for the basic operations via
the cli interface. However, we need to save the headers
and reinstall them at later point to the database without
doing anything with the actual files in the package.

To do that we need access to rpmtsTxn functions and setting
and getting some of data members of Txn structures. This
patch provides the needed getter/setter functions and exports
the needed functions to librpm users. The patch does not
change any logic or flow in rpmlib.

Upstream-Status: Pending

Signed-off-by: Janos Kovacs <janos.kovacs@intel.com>
---
 lib/librpm.vers     |  1 +
 lib/rpmts.c         |  6 ++++++
 lib/rpmts.h         | 10 ++++++++++
 rpmdb/Makefile.am   |  4 ++--
 rpmdb/librpmdb.vers |  1 +
 rpmdb/rpmdb.c       |  6 ++++++
 rpmdb/rpmdb.h       | 11 +++++++++++
 7 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/lib/librpm.vers b/lib/librpm.vers
index afeb132..75b3f6d 100644
--- a/lib/librpm.vers
+++ b/lib/librpm.vers
@@ -386,6 +386,7 @@ LIBRPM_0
     rpmtsSetSolveCallback;
     rpmtsSetSpec;
     rpmtsSetTid;
+    rpmtsSetTxn;
     rpmtsSetType;
     rpmtsSetVSFlags;
     rpmtsSolve;
diff --git a/lib/rpmts.c b/lib/rpmts.c
index 3937458..0d7755c 100644
--- a/lib/rpmts.c
+++ b/lib/rpmts.c
@@ -1039,6 +1039,12 @@ rpmuint32_t rpmtsSetTid(rpmts ts, rpmuint32_t tid)
     return otid;
 }
 
+void rpmtsSetTxn(rpmts ts, rpmtxn txn)
+{
+    ts->txn = txn;
+}
+
+
 rpmPRCO rpmtsPRCO(rpmts ts)
 {
     rpmPRCO PRCO = NULL;
diff --git a/lib/rpmts.h b/lib/rpmts.h
index b292aea..b530442 100644
--- a/lib/rpmts.h
+++ b/lib/rpmts.h
@@ -327,6 +327,8 @@ struct rpmts_s {
     int nrefs;			/*!< (unused) keep splint happy */
 #endif
 };
+#else  /* _RPMTS_INTERNAL */
+typedef void *rpmtxn;
 #endif	/* _RPMTS_INTERNAL */
 
 #ifdef __cplusplus
@@ -802,6 +804,14 @@ rpmuint32_t rpmtsSetTid(rpmts ts, rpmuint32_t tid)
 	/*@modifies ts @*/;
 
 /** \ingroup rpmts
+ * Register transaction to ts.
+ * @param ts		transaction set
+ * @param txn		transaction
+ */
+void rpmtsSetTxn(rpmts ts, rpmtxn txn)
+	/*@modifies ts @*/;
+
+/** \ingroup rpmts
  * Get OpenPGP packet parameters, i.e. signature/pubkey constants.
  * @param ts		transaction set
  * @return		signature/pubkey constants.
diff --git a/rpmdb/Makefile.am b/rpmdb/Makefile.am
index 40237e4..0494f00 100644
--- a/rpmdb/Makefile.am
+++ b/rpmdb/Makefile.am
@@ -49,10 +49,10 @@ RPMDB_LDADD_COMMON = \
 	$(RPMIO_LDADD_COMMON)
 
 pkgincdir = $(pkgincludedir)$(WITH_PATH_VERSIONED_SUFFIX)
-pkginc_HEADERS = pkgio.h rpmdb.h rpmevr.h rpmns.h rpmtag.h rpmtypes.h
+pkginc_HEADERS = pkgio.h rpmdb.h rpmevr.h rpmns.h rpmtag.h rpmtypes.h rpmtxn.h
 noinst_HEADERS = \
 	fprint.h header_internal.h legacy.h rpmdpkg.h rpmlio.h rpmmdb.h \
-	rpmrepo.h rpmtd.h rpmtxn.h rpmwf.h signature.h
+	rpmrepo.h rpmtd.h rpmwf.h signature.h
 
 #pkglibdir =		@USRLIBRPM@
 #pkglib_LTLIBRARIES =	libsqldb.la
diff --git a/rpmdb/librpmdb.vers b/rpmdb/librpmdb.vers
index 37bf817..2d66cb0 100644
--- a/rpmdb/librpmdb.vers
+++ b/rpmdb/librpmdb.vers
@@ -123,6 +123,7 @@ LIBRPMDB_0
     rpmdbBlockDBI;
     rpmdbCloseDBI;
     rpmdbCount;
+    rpmdbTxn;
     rpmdbCountPackages;
     rpmdbFindFpList;
     rpmdbMireApply;
diff --git a/rpmdb/rpmdb.c b/rpmdb/rpmdb.c
index b05eea4..14ba171 100644
--- a/rpmdb/rpmdb.c
+++ b/rpmdb/rpmdb.c
@@ -1234,6 +1234,12 @@ int rpmdbCount(rpmdb db, rpmTag tag, const void * keyp, size_t keylen)
     return rc;
 }
 
+void *rpmdbTxn(rpmdb db)
+{
+    return db ? db->db_txn : NULL;
+}
+
+
 /* XXX python/upgrade.c, install.c, uninstall.c */
 int rpmdbCountPackages(rpmdb db, const char * N)
 {
diff --git a/rpmdb/rpmdb.h b/rpmdb/rpmdb.h
index 8c27c17..dd0f41f 100644
--- a/rpmdb/rpmdb.h
+++ b/rpmdb/rpmdb.h
@@ -1232,6 +1232,17 @@ int rpmdbCount(/*@null@*/ rpmdb db, rpmTag tag,
 	/*@modifies db, rpmGlobalMacroContext, fileSystem, internalState @*/;
 
 /** \ingroup rpmdb
+ * Return transaction ID
+ * @param db		rpm database
+ * @param tag		rpm tag
+ * @param keyp		key data
+ * @param keylen	key data length (0 will use strlen(keyp))
+ * @return		number of instances
+ */
+void *rpmdbTxn(/*@null@*/ rpmdb db)
+	/*@*/;
+
+/** \ingroup rpmdb
  * Return number of instances of package in Name index.
  * @param db		rpm database
  * @param N		rpm package name
-- 
2.1.0

