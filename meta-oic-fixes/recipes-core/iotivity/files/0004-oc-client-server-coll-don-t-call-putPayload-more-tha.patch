From 869c45082c37f203103fc38bfc11fc9c94b26e41 Mon Sep 17 00:00:00 2001
From: Kevron Rees <tripzero.kev@gmail.com>
Date: Wed, 23 Sep 2015 15:25:35 -0700
Subject: [PATCH 4/7] oc{client,server}coll: don't call putPayload() more than
 once.  remember and free payload.

Upstream Status: Backported

removed cosmetic fix
---
 .../samples/linux/SimpleClientServer/occlientcoll.cpp     | 15 ++++++++++++---
 .../samples/linux/SimpleClientServer/ocservercoll.cpp     |  2 +-
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/resource/csdk/stack/samples/linux/SimpleClientServer/occlientcoll.cpp b/resource/csdk/stack/samples/linux/SimpleClientServer/occlientcoll.cpp
index 94e9e14..8b21796 100644
--- a/resource/csdk/stack/samples/linux/SimpleClientServer/occlientcoll.cpp
+++ b/resource/csdk/stack/samples/linux/SimpleClientServer/occlientcoll.cpp
@@ -268,6 +268,7 @@ int InitObserveRequest(OCClientResponse * clientResponse)
     OCStackResult ret;
     OCCallbackData cbData;
     OCDoHandle handle;
+    OCPayload* payload = NULL;
     std::ostringstream obsReg;
     obsReg << "coap://" << clientResponse->devAddr.addr << ":" <<
             clientResponse->devAddr.addr <<
@@ -275,8 +276,9 @@ int InitObserveRequest(OCClientResponse * clientResponse)
     cbData.cb = getReqCB;
     cbData.context = (void*)DEFAULT_CONTEXT_VALUE;
     cbData.cd = NULL;
+    payload = putPayload();
     OC_LOG_V(INFO, TAG, "OBSERVE payload from client =");
-    OC_LOG_PAYLOAD(INFO, TAG, putPayload());
+    OC_LOG_PAYLOAD(INFO, TAG, payload);
 
     ret = OCDoResource(&handle, OC_REST_OBSERVE, obsReg.str().c_str(), 0, 0, OC_CONNTYPE,
             OC_LOW_QOS, &cbData, NULL, 0);
@@ -288,6 +290,8 @@ int InitObserveRequest(OCClientResponse * clientResponse)
     {
         gObserveDoHandle = handle;
     }
+    OCPayloadDestroy(payload);
+
     return ret;
 }
 
@@ -296,6 +300,7 @@ int InitPutRequest(OCClientResponse * clientResponse)
 {
     OCStackResult ret;
     OCCallbackData cbData;
+    OCPayload* payload = NULL;
     //* Make a PUT query*/
     std::ostringstream getQuery;
     getQuery << "coap://" << clientResponse->devAddr.addr << ":" <<
@@ -304,15 +309,19 @@ int InitPutRequest(OCClientResponse * clientResponse)
     cbData.cb = putReqCB;
     cbData.context = (void*)DEFAULT_CONTEXT_VALUE;
     cbData.cd = NULL;
+    payload = putPayload();
     OC_LOG_V(INFO, TAG, "PUT payload from client = ");
-    OC_LOG_PAYLOAD(INFO, TAG, putPayload());
+    OC_LOG_PAYLOAD(INFO, TAG, payload);
 
-    ret = OCDoResource(NULL, OC_REST_PUT, getQuery.str().c_str(), 0, putPayload(),
+    ret = OCDoResource(NULL, OC_REST_PUT, getQuery.str().c_str(), 0, payload,
                         OC_CONNTYPE, OC_LOW_QOS, &cbData, NULL, 0);
     if (ret != OC_STACK_OK)
     {
         OC_LOG(ERROR, TAG, "OCStack resource error");
     }
+
+    OCPayloadDestroy(payload);
+
     return ret;
 }
 
diff --git a/resource/csdk/stack/samples/linux/SimpleClientServer/ocservercoll.cpp b/resource/csdk/stack/samples/linux/SimpleClientServer/ocservercoll.cpp
index d3fed5a..4d4913a 100644
--- a/resource/csdk/stack/samples/linux/SimpleClientServer/ocservercoll.cpp
+++ b/resource/csdk/stack/samples/linux/SimpleClientServer/ocservercoll.cpp
@@ -378,7 +378,7 @@ OCEntityHandlerResult OCEntityHandlerLightCb(OCEntityHandlerFlag flag,
     {
         gLightUnderObservation = 1;
     }
-
+    OCRepPayloadDestroy(payload);
     return ret;
 }
 
-- 
2.1.4

