commit 4e47767251bccaad52200b98853479c1ff462ff6
Author: Kevron Rees <kevron.m.rees@intel.com>
Date:   Wed Jun 10 08:45:07 2015 -0700

    Use dist path if cereal has already been installed

diff --git a/extlibs/cereal/SConscript b/extlibs/cereal/SConscript
index 946a483..cfe54fd 100644
--- a/extlibs/cereal/SConscript
+++ b/extlibs/cereal/SConscript
@@ -8,6 +8,7 @@ import os
 Import('env')
 
 src_dir = env.get('SRC_DIR')
+conf = Configure(env)
 
 # In the pass, cereal library is in extlibs/cereal, according to external
 # library management rule, cereal should be put in extlibs/cereal/cereal.
@@ -15,9 +16,19 @@ src_dir = env.get('SRC_DIR')
 # both places are handled.
 old = os.path.join(src_dir, 'extlibs', 'cereal', 'include')
 cur = os.path.join(src_dir, 'extlibs', 'cereal', 'cereal', 'include')
+prefix = "/"
+
+try:
+	prefix = os.environ['PKG_CONFIG_SYSROOT_DIR']
+except:
+	prefix = "/"
+
+dist = os.path.join(prefix, 'usr', 'include', 'cereal')
+
+env = conf.Finish()
 
 # check 'cereal' library, if it doesn't exits, ask user to download it
-if not os.path.exists(old) and not os.path.exists(cur):
+if not os.path.exists(old) and not os.path.exists(cur) and not os.path.exists(dist):
 	cereal_env = Environment(ENV = os.environ)
 	c = cereal_env.Action(['git clone https://github.com/USCiLab/cereal.git cereal',
 		'cd cereal && git reset --hard 7121e91e6ab8c3e6a6516d9d9c3e6804e6f65245 && git apply ../../../resource/patches/cereal_gcc46.patch',
@@ -38,4 +49,4 @@ if not os.path.exists(old) and not os.path.exists(cur):
 	else:
 		print 'Download cereal library complete'
 
-env.AppendUnique(CPPPATH = [old, cur])
+env.AppendUnique(CPPPATH = [old, cur, dist])
diff --git a/extlibs/gtest/SConscript b/extlibs/gtest/SConscript
index 396e4f3..af3ca79 100644
--- a/extlibs/gtest/SConscript
+++ b/extlibs/gtest/SConscript
@@ -11,7 +11,7 @@ Import('env')
 target_os = env.get('TARGET_OS')
 src_dir = env.get('SRC_DIR')
 
-targets_need_gtest = ['darwin','linux']
+targets_need_gtest = ['darwin']
 gtest_dir      = src_dir + '/extlibs/gtest/gtest-1.7.0'
 gtest_zip_file = src_dir + '/extlibs/gtest/gtest-1.7.0.zip'
 gtest_url      = 'https://googletest.googlecode.com/files/gtest-1.7.0.zip'
diff --git a/extlibs/hippomocks.scons b/extlibs/hippomocks.scons
index 6d5b5a4..97509a5 100644
--- a/extlibs/hippomocks.scons
+++ b/extlibs/hippomocks.scons
@@ -30,9 +30,10 @@ Import('env')
 
 target_os = env.get('TARGET_OS')
 src_dir = env.get('SRC_DIR')
+unit_test = False
 
 # Only verify/install on linux
-if target_os == 'linux':
+if target_os == 'linux' and unit_test:
 	print '*** Checking for installation of hippomocks ***'
 
 	hippomocks_sha      = '2f40aa11e31499432283b67f9d3449a3cd7b9c4d'
diff --git a/resource/csdk/SConscript b/resource/csdk/SConscript
index 63e6462..5d1692b 100644
--- a/resource/csdk/SConscript
+++ b/resource/csdk/SConscript
@@ -70,6 +70,9 @@ liboctbstack_env.AppendUnique(LIBS = ['coap', 'm'])
 if target_os == 'tizen':
     liboctbstack_env.ParseConfig("pkg-config --cflags --libs uuid")
 
+if target_os == 'linux':
+	liboctbstack_env.AppendUnique(LIBS = ['uuid'])
+
 if target_os not in ['android', 'arduino', 'windows', 'winrt']:
 	liboctbstack_env.AppendUnique(LIBS = ['pthread'])
 
diff --git a/resource/csdk/connectivity/test/SConscript b/resource/csdk/connectivity/test/SConscript
index 7189319..2fefc16 100644
--- a/resource/csdk/connectivity/test/SConscript
+++ b/resource/csdk/connectivity/test/SConscript
@@ -71,15 +71,16 @@ if env.get('LOGGING'):
 ######################################################################
 # Source files and Targets
 ######################################################################
-catests = catest_env.Program('catests', ['catests.cpp',
+if env.get('TEST') == '1':
+	catests = catest_env.Program('catests', ['catests.cpp',
                                          'caprotocolmessagetest.cpp',
                                                'ca_api_unittest.cpp',
                                                'camutex_tests.cpp'])
 
-Alias("test", [catests])
+	Alias("test", [catests])
+
+	env.AppendTarget('test')
 
-env.AppendTarget('test')
-if env.get('TEST') == '1':
         target_os = env.get('TARGET_OS')
         if target_os == 'linux':
                 out_dir = env.get('BUILD_DIR')
diff --git a/resource/csdk/ocrandom/test/SConscript b/resource/csdk/ocrandom/test/SConscript
index ab221cd..090ee29 100644
--- a/resource/csdk/ocrandom/test/SConscript
+++ b/resource/csdk/ocrandom/test/SConscript
@@ -53,12 +53,11 @@ if env.get('LOGGING'):
 ######################################################################
 # Source files and Targets
 ######################################################################
-randomtests = randomtest_env.Program('randomtests', ['linux/randomtest.cpp'])
 
-Alias("test", [randomtests])
-
-env.AppendTarget('test')
 if env.get('TEST') == '1':
+	env.AppendTarget('test')
+	randomtests = randomtest_env.Program('randomtests', ['linux/randomtest.cpp'])
+	Alias("test", [randomtests])
 	target_os = env.get('TARGET_OS')
 	if target_os == 'linux':
 		out_dir = env.get('BUILD_DIR')
diff --git a/resource/csdk/stack/test/SConscript b/resource/csdk/stack/test/SConscript
index a331fa3..e740de8 100644
--- a/resource/csdk/stack/test/SConscript
+++ b/resource/csdk/stack/test/SConscript
@@ -63,12 +63,13 @@ if env.get('LOGGING'):
 ######################################################################
 # Source files and Targets
 ######################################################################
-stacktests = stacktest_env.Program('stacktests', ['stacktests.cpp'])
+if env.get('TEST') == '1':
+	stacktests = stacktest_env.Program('stacktests', ['stacktests.cpp'])
 
-Alias("test", [stacktests])
+	Alias("test", [stacktests])
+
+	env.AppendTarget('test')
 
-env.AppendTarget('test')
-if env.get('TEST') == '1':
 	target_os = env.get('TARGET_OS')
 	if target_os == 'linux':
 		out_dir = env.get('BUILD_DIR')
diff --git a/resource/unittests/SConscript b/resource/unittests/SConscript
index cdb9ca7..ac0d9e4 100644
--- a/resource/unittests/SConscript
+++ b/resource/unittests/SConscript
@@ -65,7 +65,8 @@ if env.get('LOGGING'):
 ######################################################################
 # Source files and Targets
 ######################################################################
-unittests = unittests_env.Program('unittests', ['ConstructResourceTest.cpp',
+if env.get('TEST') == '1':
+	unittests = unittests_env.Program('unittests', ['ConstructResourceTest.cpp',
                                                 'OCPlatformTest.cpp',
                                                 'OCRepresentationTest.cpp',
                                                 'OCResourceTest.cpp',
@@ -73,10 +74,10 @@ unittests = unittests_env.Program('unittests', ['ConstructResourceTest.cpp',
                                                 'OCResourceResponseTest.cpp',
                                                 'OCHeaderOptionTest.cpp'])
 
-Alias("unittests", [unittests])
+	Alias("unittests", [unittests])
+
+	env.AppendTarget('unittests')
 
-env.AppendTarget('unittests')
-if env.get('TEST') == '1':
 	target_os = env.get('TARGET_OS')
 	if target_os == 'linux':
 		out_dir = env.get('BUILD_DIR')
diff --git a/service/third_party_libs.scons b/service/third_party_libs.scons
index 6ddeebc..a253af9 100644
--- a/service/third_party_libs.scons
+++ b/service/third_party_libs.scons
@@ -51,11 +51,11 @@ if target_os in ['linux', 'tizen']:
 
 		if target_os not in ['tizen'] and not conf.CheckLib('boost_thread', language='C++'):
 			print 'Did not find boost_thread, exiting!'
-			Exit(1)
+			#Exit(1)
 
 		if target_os not in ['tizen'] and not conf.CheckLib('boost_system', language='C++'):
 			print 'Did not find boost_system, exiting!'
-			Exit(1)
+			#Exit(1)
 
 		lib_env = conf.Finish()
 
